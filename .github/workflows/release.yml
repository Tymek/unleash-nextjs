name: 🚂 NPM & GitHub Release

on:
  push:
    branches:
      - main
    paths:
      - lib/package.json

jobs:
  build-test-release:
    name: Release train choo choo
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - uses: actions/checkout@v3
        id: setup-git-checkout
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          fetch-depth: 2

      - uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]

      - name: 🔍️ Get version from lib/package.json
        run: |
          PACKAGE_VERSION=$(node -p "require('./lib/package.json').version")
          PACKAGE_TAG=$(node -p "/^\d(?:\.\d)*\-([\w\-]+)[\.\+]?.*$/.exec('$PACKAGE_VERSION')?.[1] ?? 'latest'")
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "PACKAGE_TAG=$PACKAGE_TAG" >> $GITHUB_ENV

      - name: 🔨 Build
        run: pnpm build

      - name: ✨ Lint
        run: pnpm lint

      - name: 🧪 Tests
        run: pnpm test

      - name: 🔖 Create git tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag v$PACKAGE_VERSION
          git push --tags

      - name: 📦️ Publish to NPM
        run: pnpm publish --access public --tag $PACKAGE_TAG
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📝 Publish GitHub Release
        env:
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          WORKFLOW_RELEASE_PRERELEASE=$(node -p "'$PACKAGE_TAG' !== 'latest'")
          WORKFLOW_RELEASE_BODY=$(
          cat <<-_EOT_
          {
            "tag_name": "v${PACKAGE_VERSION}",
            "name": "v${PACKAGE_VERSION}",
            "prerelease": ${WORKFLOW_RELEASE_PRERELEASE},
            "generate_release_notes": true
          }
          _EOT_
          )
          curl -L --fail-with-body \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_ACCESS_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/releases" \
            -d "$WORKFLOW_RELEASE_BODY"
